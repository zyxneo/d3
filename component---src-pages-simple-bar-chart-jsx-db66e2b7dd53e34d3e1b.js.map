{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./src/pages/simple-bar-chart.jsx","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Header/index.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js"],"names":["ButtonContent","props","children","className","content","hidden","visible","classes","classnames_default","Object","classNameBuilders","a","rest","getUnhandledProps","ElementType","getElementType","react_default","createElement","extends_default","lib","isNil","handledProps","propTypes","Button_ButtonContent","K","J","H","n","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","b","d","f","isNil_default","map_default","button","elements_Button_Button","create","Button_ButtonGroup","S","ButtonOr","text","data-text","Button_ButtonOr","q","Button_Button","_Component","Button","_getPrototypeOf2","_temp","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","_this$props","label","_this$props2","disabled","tabIndex","invoke_default","ref","e","preventDefault","c","_this$props3","labelPosition","inherits_default","createClass_default","key","value","_this$props4","active","animated","circular","loading","role","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","handleRef","Icon","hasChildren","react","Component","as","factories","L","V","simple_bar_chart_IndexPage","IndexPage","_React$Component","state","updateBar","data","scale","d3","m","domain","j","range","blue","teal","green","bars","p","selectAll","transition","duration","ease","delay","i","style","enter","append","classed","exit","remove","randomize","newData","k","map","Math","round","random","setState","componentDidMount","componentDidUpdate","render","Layout","Content","name","t","__webpack_exports__","default","W","236","238","r","o","l","components_Footer","Segment","Container","u","components_Header","Menu","Item","gatsby_link_default","to","position","Dropdown","item","components_Layout_Layout","Helmet_default","title","meta","h","583"],"mappings":"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","file":"component---src-pages-simple-bar-chart-jsx-db66e2b7dd53e34d3e1b.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args))), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _invoke(_this.ref, 'focus');\n    }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRef\", function (c) {\n      return _this.ref = c;\n    }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    }), _temp));\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          role = _this$props4.role,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(\"button\", {\n          className: buttonClasses,\n          disabled: disabled,\n          ref: this.handleRef,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        ref: this.handleRef,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content);\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button',\n  role: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf(_toConsumableArray(SUI.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","// @flow\n\nimport React from 'react'\nimport * as d3 from 'd3'\n// $FlowIgnore\nimport {\n  Button,\n  Icon,\n} from 'semantic-ui-react'\n\nimport Layout from '../components/Layout'\n// $FlowIgnore\nimport './simple-bar-chart.scss'\n\ntype Props = {\n  data: Array<number>,\n}\n\ntype State = {\n  data: Array<number>,\n}\n\nclass IndexPage extends React.Component<Props, State> {\n  props: Props\n\n  state: State\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      data: [30, 86, 168, 281, 303, 365],\n    }\n  }\n\n  componentDidMount() {\n    this.updateBar()\n  }\n\n  componentDidUpdate() {\n    this.updateBar()\n  }\n\n  updateBar = () => {\n    const { data } = this.state\n    const scale = d3.scaleLinear().domain([0, d3.max(data)]).range([0, 500])\n\n    const blue = d3.color('#0074D9')\n    const teal = d3.color('#39CCCC')\n    const green = d3.color('#2ECC40')\n    const color = d3.scaleLinear().domain([0, d3.max(data) / 2, d3.max(data)]).range([blue, teal, green])\n\n    const bars = d3.select('.bar-chart')\n      .selectAll('div')\n      .data(data)\n\n    bars.transition()\n      .duration(1000)\n      .ease(d3.easeExpInOut)\n      .delay((d, i) => i * 200)\n      .style('width', d => `${scale(d)}px`)\n      .style('background-color', d => color(d))\n      .text(d => d)\n\n    bars.enter().append('div')\n      .classed('bar', true)\n      .style('width', d => `${scale(d)}px`)\n      .style('background-color', d => color(d))\n      .text(d => d)\n\n    bars.exit().remove()\n  }\n\n  randomize = () => {\n    const newData = d3.range(6).map(() => Math.round(Math.random() * 2000))\n\n    this.setState({\n      data: newData,\n    })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"simple-bar-chart\">\n          <div className=\"bar-chart\" />\n        </div>\n\n        <Button\n          animated=\"fade\"\n          primary\n          onClick={this.randomize}\n        >\n          <Button.Content visible>Randomize</Button.Content>\n          <Button.Content hidden><Icon name=\"random\" /></Button.Content>\n        </Button>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","// @flow\n\nimport Footer from './Footer'\n\nexport default Footer\n","// @flow\n\nimport React from 'react'\n// import Link from 'gatsby-link';\n\nimport {\n  Container,\n  Segment,\n} from 'semantic-ui-react'\n\nconst LayoutFooter = () => (\n  <Segment vertical>\n    <Container>\n      D3 examples\n    </Container>\n  </Segment>\n)\n\nexport default LayoutFooter\n","// @flow\n\nimport Header from './Header'\n\nexport default Header\n","// @flow\n\nimport React from 'react'\n// $FlowIgnore\nimport Link from 'gatsby-link'\n\nimport {\n  Container,\n  Dropdown,\n  Menu,\n  // $FlowIgnore\n} from 'semantic-ui-react'\n\nconst Header = () => (\n  <Menu size=\"large\">\n    <Container>\n      <Menu.Item as={Link} to=\"/\">Home</Menu.Item>\n\n      <Menu.Menu position=\"right\">\n        <Menu.Menu position=\"right\">\n          <Dropdown item text=\"Examples\">\n            <Dropdown.Menu>\n              <Dropdown.Item  as={Link} to=\"/simple-bar-chart\">simple-bar-chart</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/svg-bar-chart\">svg-bar-chart</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/svg-bar-chart-vertical\">svg-bar-chart-vertical</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/general-update-pattern\">general-update-pattern</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/nested-selections\">nested-selections</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/working-with-transitions\">working-with-transitions</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/axis-styling\">axis-styling</Dropdown.Item>\n              <Dropdown.Item  as={Link} to=\"/stacked-to-grouped-bars\">stacked-to-grouped-bars</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n\n      </Menu.Menu>\n    </Container>\n  </Menu>\n)\n\nexport default Header\n","// @flow\n\nimport React from 'react'\nimport type { Node } from 'react'\n// $FlowIgnore\nimport Helmet from 'react-helmet'\nimport {\n  Container,\n} from 'semantic-ui-react'\n\nimport Footer from '../Footer'\nimport Header from '../Header'\n\n\n// $FlowIgnore\nimport 'sanitize.css/sanitize.css'\n// $FlowIgnore\nimport 'semantic-ui-css/semantic.min.css'\n\n// $FlowIgnore\nimport './index.scss'\n\ntype Props = {\n  children: Node\n}\n\nconst Layout = (props: Props): Node => (\n  <div>\n    <Helmet\n      title=\"D3 examples\"\n      meta={[\n        { name: 'description', content: 'D3 examples and tutorials in built with Gatsby react' },\n        { name: 'keywords', content: 'D3, React' },\n      ]}\n    />\n    <Header />\n    <Container>\n      {props.children}\n    </Container>\n    <Footer />\n  </div>\n)\n\nexport default Layout\n","// @flow\n\nimport Layout from './Layout'\n\nexport default Layout\n"],"sourceRoot":""}