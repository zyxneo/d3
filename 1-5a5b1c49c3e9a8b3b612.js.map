{"version":3,"sources":["webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-zoom/src/transform.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","o","number","variance","values","valueof","value","delta","n","m","i","mean","sum","isNaN","deviation","array","v","Math","sqrt","src_extent","min","max","array_array","Array","prototype","src_range","slice","map","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","p","i0","value0","src_max","src_merge","arrays","merged","j","src_min","shuffle","i1","t","random","src_transpose","matrix","transpose_length","transpose","row","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","domain","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","_","call","tickSize","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","get","type","name","c","set","callback","concat","push","constructor","on","typename","types","T","trim","split","indexOf","hasOwnProperty","that","args","src_dispatch","O","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","et","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","setAttribute","join","splice","contains","filterEvents","on_event","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","mouseenter","mouseleave","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","bind","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","sort","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","create","before","clone","deep","typenames","src_selection","Ft","src_select","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","noevent","preventDefault","stopImmediatePropagation","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","define","factory","extend","definition","Object","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","color_rgb","hex","h","s","l","Hsl","hsl","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hcl","atan2","hclConvert","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","nogamma","rgbGamma","color","gamma","end","rgbSpline","spline","colors","cssNode","cssRoot","cssView","svgNode","rgbBasis","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","src_rgb","isArray","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","d1","b0","b1","r0","r1","coshr0","u","duration","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","taskHead","taskTail","cubehelixLong","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","t0","Infinity","sleep","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_init","schedule","schedule_get","schedule_set","interrupt","active","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","cubicInOut","expInOut","children","inherit","id0","id1","on0","on1","sit","every","attrTween","interpolate","value00","value10","interpolate0","value1","_value","styleTween","tween0","tween1","custom","polyIn","exponent","polyOut","polyInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","w","src_path","Or","Map","map_map","object","has","clear","keys","entries","src_map","Vr","Set","proto","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","pi","xi","yi","pj","xj","yj","segmentContains","src_noop","cases","src_contours","threshold","smooth","smoothLinear","contours","tz","contour","polygons","holes","fragmentByStart","fragmentByEnd","forEach","stitch","startIndex","endIndex","unshift","polygon","coordinates","xt","yt","_0","_1","thresholds","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","N","I","eof","eol","token","replace","formatRow","formatValue","test","convert","columnSet","column","formatRows","csv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","src_text","input","init","fetch","then","dsvParse","dsv_tsv","parser","DOMParser","parseFromString","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","target","cover","xz","yz","visit","extent","find","radius","x3","y3","quads","retainer","removeAll","visitAfter","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","noop_noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleRadius","cosRadius","clip_buffer","lines","rejoin","shift","result","pointEqual","Intersection","points","other","entry","segments","compareIntersection","startInside","subject","clip","segment","rejoin_link","isSubject","polygonContains_sum","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","intersection","phiArc","polygonContains","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","Gf","sign0","sign1","sinLambda0Lambda1","from","to","direction","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","sinRadius","circleStream","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","d3_geo_src_identity","bounds_x0","bounds_y0","bounds_x1","bounds_y1","path_bounds","bounds","string_circle","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","translate","fitExtent","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clip_antimeridian","postclip","recenter","center","clipAngle","fitSize","fitWidth","fitHeight","height","conicEqualAreaRaw","sy0","r0y","conicEqualArea","parallels","conicProjection","albers","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","mercatorRaw","equirectangularRaw","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","cxcy","eachAfter","ancestor","aNodes","ancestors","bNodes","descendants","leaves","links","d3_hierarchy_src_array_slice","enclose","circles","B","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","ab","dice","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","resquarify","_squarify","src_defaultSource","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","d3_scale_src_array_array","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","paddingInner","paddingOuter","rescale","rangeRound","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","output","src_tickFormat","src_linear_linear","nice","linearish","interval","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","Va","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","tu","day_day","setHours","setDate","getDate","src_day","eu","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","lu","year_year","setFullYear","src_year","_u","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","bu","utcHour","setUTCMinutes","getUTCHours","src_utcHour","yu","utcDay","setUTCHours","setUTCDate","getUTCDate","xu","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","Cu","utcYear","setUTCFullYear","src_utcYear","Pu","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","W","formatWeekNumberMonday","locale_formatYear","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","src_time","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_minute","src_second","src_colors","ramp","scheme","viridis_ramp","d3_shape_src_constant","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_tau","Linear","_context","areaStart","_line","areaEnd","_point","curve_linear","point_x","point_y","xs","defined","curve","buffer","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","Radial","_curve","radial","curveRadial","pointRadial","d3_shape_src_array_slice","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","d3_shape_src_noop","basis_point","Basis","Bundle","_basis","_beta","cardinal_point","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","ReflectContext","bundle","cardinal","_x3","_x4","_x5","_y3","_y4","_y5","x23","y23","catmullRom","_t0","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","order_ascending","sums","ascending_sum","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","gh","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","edges","Transform","triangles","e1","_found","vx","vy","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity"],"mappings":"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","file":"1-5a5b1c49c3e9a8b3b612.js","sourcesContent":["export var name = \"d3\";\nexport var version = \"5.5.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","export var slice = Array.prototype.slice;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n"],"sourceRoot":""}